# Default values for dhis2-core-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
commonLabels: {}

storage:
  persisted: true
  volumeSize: 1Gi
  className: ~

googleAuth:
  projectId: ""
  privateKeyId: ""
  privateKey: '' # Use single quotes if the string contains \n or other characters which shouldn't be evaluated by helm
  clientEmail: ""
  clientId: ""

dhisConfig: |
  connection.dialect = org.hibernate.dialect.PostgreSQLDialect
  connection.driver_class = org.postgresql.Driver
  connection.url = jdbc:postgresql://dhis2-postgresql.dhis2.svc/dhis2
  connection.username = dhis
  connection.password = dhis
  # Database schema behavior, can be validate, update, create, create-drop
  connection.schema = update
  # Server base URL
  server.base.url = https://dhis2-core.127.0.0.1.nip.io/

dhis2Home: /opt/dhis2

log4j2: config/log4j2.xml

serverXml: config/server.xml

catalinaOpts: "-Dcontext.path=''"
javaOpts: ""

minReadySeconds: 120
startupProbe: # 2min10s (26 * 5 = 130s)
  failureThreshold: 26
  periodSeconds: 5
  path: /
livenessProbe:
  timeoutSeconds: 1
  path: /
readinessProbe:
  timeoutSeconds: 1
  path: /

replicaCount: 1

strategy:
  type: RollingUpdate
  rollingUpdate:
    partition: 0
    maxUnavailable: 0

image:
  repository: dhis2/core
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 2.40.2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
   capabilities:
     drop:
     - ALL
   readOnlyRootFilesystem: false # To be changed once dhis2-core and Tomcat are configured to log to stdout without needing write access.
   runAsNonRoot: true
   runAsUser: 65534
   runAsGroup: 65534

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  hostname: dhis2-core.127.0.0.1.nip.io
  path: /
  # certIssuer: letsencrypt-staging | letsencrypt-prod
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
